% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/autopartial.R
\name{partial}
\alias{partial}
\title{Partial function application}
\usage{
partial(.f, ...)
}
\arguments{
\item{.f}{<\code{\link{closure}} | \code{\link{primitive}}> function to be partially applied.}

\item{...}{arguments to be partially applied to \code{.f}.}
}
\value{
A modified version of \code{.f} with the arguments in \code{...} applied to it.
}
\description{
Partially apply a function.
}
\details{
Partially applies the provided arguments to the function \code{.f}. Acts like
\code{\link[=autopartial]{autopartial()}}, except that the next invocation will evaluate the function
rather than waiting for all required arguments to be supplied.

Arguments may also be passed the special value \code{\link[=waiver]{waiver()}}. If \code{\link[=waiver]{waiver()}} is
passed to an argument, its default value is used instead.

Great pains are taken to ensure that the resulting function acts as much as
possible like the original function. See the \strong{Implementation details}
section of \code{\link[=autopartial]{autopartial()}} for more information.
}
\examples{
f = function(x, y, z = 3) c(x, y, z)
fp = partial(f, 1, z = 4)
fp
fp(2)

}
\seealso{
Other partial function constructors: 
\code{\link{autopartial}()},
\code{\link{new_autopartial}()}
}
\concept{partial function constructors}
