% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/promise.R
\name{as_promise}
\alias{as_promise}
\alias{as_promise.default}
\alias{as_promise.formula}
\title{Convert an object to a promise}
\usage{
as_promise(x, env = parent.frame())

\method{as_promise}{default}(x, env = parent.frame())

\method{as_promise}{formula}(x, env = parent.frame())
}
\arguments{
\item{x}{object to convert to a promise: may be a quoted expression, or
may be an object that wraps an expression and an environment, such as
a \code{\link{formula}}.}

\item{env}{<\code{\link{environment}}> environment \code{expr} is promised to be executed in.
When applied to a \code{\link{formula}}, the environment associated with the
\code{\link{formula}} will be used.}
}
\value{
A \code{\link{promise}}.

\strong{NOTE:} Due to the fragility of \code{\link{promise}}s, it is often best to keep them
in \code{\link{arglist}}s. If you attempt to assign the results of this function
to a variable instead of passing it directly to another function, it will
likely be \link[=force]{forced} and no longer be a \code{\link{promise}}.
}
\description{
Convert an object to a \code{\link{promise}}.
}
\examples{
arglist(as_promise(quote(x + 1)))

arglist(as_promise( ~ x + 1))

}
\seealso{
\code{\link[=promise_expr]{promise_expr()}} and \code{\link[=promise_env]{promise_env()}} for extracting the expression
or environment associated with a \code{\link{promise}}.

\code{\link[=capture]{capture()}} for capturing the \code{\link{promise}} associated with a single
function argument.

\code{\link[=capture_all]{capture_all()}}, \code{\link[=capture_named]{capture_named()}}, and \code{\link[=capture_dots]{capture_dots()}} for
capturing the \code{\link{promise}}s associated with multiple function arguments.

Other promise constructors: 
\code{\link{new_promise}()},
\code{\link{promise}()},
\code{\link{promises}()}
}
\concept{promise constructors}
