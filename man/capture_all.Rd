% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/capture.R
\name{capture_all}
\alias{capture_all}
\alias{capture_named}
\alias{capture_dots}
\title{Capture promises for arguments to a function call}
\usage{
capture_all(env = parent.frame())

capture_named(env = parent.frame())

capture_dots(env = parent.frame())
}
\arguments{
\item{env}{<\code{\link{environment}}> the frame to capture arguments from.
The default looks at the arguments passed to the function that called this one.}
}
\value{
An \code{\link{arglist}} where names are names of arguments to the function
in the given frame and values are the promises corresponding to those
arguments.
}
\description{
Capture a list of \code{\link{promise}}s representing arguments to the surrounding
function call (or another function call specified by its frame, \code{env}).
}
\details{
\code{capture_all()} captures all arguments to the function call.

\code{capture_named()} captures named arguments (i.e. those explicitly
listed in the function definition).

\code{capture_dots()} captures arguments passed via \code{...}
}
\examples{
# captures x, y, z
f = function(x, y, ...) capture_all()
f(1, y = 2, z = 3)

# captures x, y
f = function(x, y, ...) capture_named()
f(1, y = 2, z = 3)

# captures z
f = function(x, y, ...) capture_dots()
f(1, y = 2, z = 3)

}
\seealso{
\code{\link[=capture]{capture()}} for capturing the \code{\link{promise}} associated with a single
function argument.
}
